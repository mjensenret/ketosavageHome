
@Html.DevExpress().FormLayout(form =>
{
    form.Name = "frmMainMenu";
    form.SettingsAdaptivity.AdaptivityMode = FormLayoutAdaptivityMode.SingleColumnWindowLimit;
    form.SettingsAdaptivity.SwitchToSingleColumnAtWindowInnerWidth = 320;
    //form.Width = 700;
    form.NestedExtensionWidth = Unit.Percentage(75);
    form.Styles.Style.CssClass = "mainMenu";

    form.Items.AddGroupItem(i =>
    {
        i.ColCount = 2;
        i.ShowCaption = DefaultBoolean.False;
        i.GroupBoxDecoration = GroupBoxDecoration.None;
        if (ViewBag.IsCoachOrAdmin)
        {
            i.Items.Add(b =>
            {
                b.ShowCaption = DefaultBoolean.False;
                b.SetNestedContent(() =>
                {
                    Html.DevExpress().Button(bu =>
                    {
                        bu.Width = 300;
                        bu.Name = "btnEditUser";
                        bu.Text = "Manage Users";
                        bu.RouteValues = new { Controller = "ManageUsers", Action = "Index" };
                    }).Render();
                });
            });
            i.Items.Add(b =>
            {
                b.ShowCaption = DefaultBoolean.False;
                b.SetNestedContent(() =>
                {
                    Html.DevExpress().Button(bu =>
                    {
                        bu.Width = 300;
                        bu.Name = "btnAdminUpdateMacros";
                        bu.Text = "Update User Macros";
                        bu.RouteValues = new { Controller = "UserPrograms", Action = "Index" };
                    }).Render();
                });
            });
            i.Items.Add(b =>
            {
                b.ShowCaption = DefaultBoolean.False;
                b.SetNestedContent(() =>
                {
                    Html.DevExpress().Button(bu =>
                    {
                        bu.Width = 300;
                        bu.Name = "btnManagePrograms";
                        bu.Text = "Manage Programs";
                        bu.RouteValues = new { Controller = "Programs", Action = "Index" };
                    }).Render();
                });
            });
        }
        else
        {
            i.Items.Add(b =>
            {
                b.ShowCaption = DefaultBoolean.False;
                b.SetNestedContent(() =>
                {
                    Html.DevExpress().Button(bu =>
                    {
                        bu.Width = 300;
                        bu.Name = "btnDashboard";
                        bu.Text = "Dashboard";
                        bu.RouteValues = new { Controller = "UserProgress", Action = "Index" };
                    }).Render();
                });
            });
            i.Items.Add(b =>
            {
                b.ShowCaption = DefaultBoolean.False;
                b.SetNestedContent(() =>
                {
                    Html.DevExpress().Button(bu =>
                    {
                        bu.Width = 300;
                        bu.Name = "btnMacros";
                        bu.Text = "Enter Macros";
                        //bu.RouteValues = new { Controller = "UserProgress", Action = "Index" };
                        bu.ClientSideEvents.Click = "function(s, e) { openWindow('Macros'); }";
                    }).Render();
                });
            });
            i.Items.Add(b =>
            {
                b.ShowCaption = DefaultBoolean.False;
                b.SetNestedContent(() =>
                {
                    Html.DevExpress().Button(bu =>
                    {
                        bu.Width = 300;
                        bu.Name = "btnWeighIn";
                        bu.Text = "Enter Measurements";
                        //bu.RouteValues = new { Controller = "UserProgress", Action = "Index" };
                        bu.ClientSideEvents.Click = "function(s, e) { openWindow('Measurements'); }";
                    }).Render();
                });
            });
        }

    });
}).GetHtml()

@*@Html.DevExpress().PopupControl(settings =>
    {
        settings.Name = "popupControl";
        settings.Width = 300;
        settings.AllowDragging = true;
        settings.CloseAction = CloseAction.CloseButton;
        settings.CloseOnEscape = true;
        settings.PopupAnimationType = DevExpress.Web.AnimationType.Fade;
        settings.ShowHeader = false;
        settings.Modal = true;
        settings.AutoUpdatePosition = true;
        settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
        settings.PopupVerticalAlign = PopupVerticalAlign.Middle;
        settings.ClientSideEvents.CloseUp = "function(s, e){ ASPxClientEdit.ClearEditorsInContainer(null, '', true); }";
    }).GetHtml()*@

@*<script type="text/javascript">
    function redirectToMacros() {
        var url = "@Url.Action("Index", "UserProgress")";
        window.location.replace(url);
    }

    function openWindow(action) {
        $.ajax({
            type: "POST",
            url: "@Url.Action("EntryPopup", "UserProgress")",
            data: { buttonName: action },
        traditional: true,
        success: function (response) {
            popupControl.SetContentHtml(response);
            MVCxClientUtils.FinalizeCallback();

        },
        error: function (XMLHttpRequest, textStatus, errorThrown) {
            alert('oops, something bad happened');
        }
    });
    window['popupControl'].Show();
    }
</script>*@