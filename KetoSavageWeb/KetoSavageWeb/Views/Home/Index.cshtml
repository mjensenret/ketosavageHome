@model KetoSavageWeb.Models.LoginModel

<div class="center">
    <center>
        <div class="loginForm">
            @if (!Request.IsAuthenticated)
            {
                <img src="~/Content/Images/KSLogo_white.png" />

                Html.DevExpress().FormLayout(form =>
                {
                    form.Name = "frmLoginControls";
                    form.SettingsAdaptivity.AdaptivityMode = FormLayoutAdaptivityMode.SingleColumnWindowLimit;
                    form.SettingsAdaptivity.SwitchToSingleColumnAtWindowInnerWidth = 500;
                    form.NestedExtensionWidth = Unit.Percentage(100);
                    form.Styles.Style.CssClass = "loginForm";

                    form.Items.AddGroupItem(i =>
                    {
                        i.ColCount = 2;
                        i.ShowCaption = DefaultBoolean.False;
                        i.GroupBoxDecoration = GroupBoxDecoration.Box;
                        i.Items.Add(b =>
                        {
                            b.HorizontalAlign = FormLayoutHorizontalAlign.Center;
                            b.ShowCaption = DefaultBoolean.False;
                            //b.Width = Unit.Percentage(100);
                            b.SetNestedContent(() =>
                            {
                                Html.DevExpress().Button(
                                    register =>
                                    {
                                        register.Name = "btnShowRegister";
                                        register.Text = "Register";
                                        register.ClientSideEvents.Click = "function(s, e) { openWindow('Register'); }";
                                    }).Render();
                            });

                        });

                        i.Items.Add(b =>
                        {
                            b.HorizontalAlign = FormLayoutHorizontalAlign.Center;
                            b.ShowCaption = DefaultBoolean.False;
                            //b.Width = Unit.Percentage(100);
                            b.SetNestedContent(() =>
                            {
                                Html.DevExpress().Button(
                                    settings =>
                                    {
                                        settings.Name = "btnShowLogin";
                                        settings.Text = "Login";
                                        settings.ClientSideEvents.Click = "function(s, e) { openWindow('Login'); }";
                                    }
                                ).Render();
                            });
                        });
                    });
                }).GetHtml();


            }
        </div>
        <div>
            Dashboard section here.
        </div>
    </center>

    @Html.DevExpress().PopupControl(settings =>
    {
        settings.Name = "popupControl";
        settings.Width = 400;
        settings.AllowDragging = true;
        settings.CloseAction = CloseAction.CloseButton;
        settings.CloseOnEscape = true;
        settings.PopupAnimationType = AnimationType.Fade;
        settings.ShowHeader = false;
        settings.Modal = true;
        settings.AutoUpdatePosition = true;
        settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
        settings.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
        settings.ClientSideEvents.CloseUp = "function(s, e){ ASPxClientEdit.ClearEditorsInContainer(null, '', true); }";
    }).GetHtml()


</div>

<script type="text/javascript">
        function redirectToRegister() {
            console.log('made it here!');
            var url = '@Url.Action("Register", "Account")';
            // do something with the url client side variable, for example redirect
            window.location.href = url;
        }
    //debugger;
    function openWindow(action) {
        $.ajax({
            type: "POST",
            url: "@Url.Action("LoginScreenPopup", "Account")",
            data: { buttonName: action },
            traditional: true,
            success: function (response) {
                popupControl.SetContentHtml(response);
                MVCxClientUtils.FinalizeCallback();
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                alert('oops, something bad happened');
            }
        });
        window['popupControl'].Show();
    }

</script>