@model KetoSavageWeb.Models.LoginModel

<div class="center">

    @*@Html.DevExpress().FormLayout(settings =>
        {
            settings.Name = "LoginForm";

            var groupItem = settings.Items.AddGroupItem(groupSettings =>
            {
                groupSettings.ShowCaption = DefaultBoolean.False;
                groupSettings.GroupBoxDecoration = GroupBoxDecoration.Box;
            });

            groupItem.SettingsItems.ShowCaption = DefaultBoolean.True;
            groupItem.SettingsItemCaptions.Location = LayoutItemCaptionLocation.Left;


            groupItem.Items.Add(m => m.UserName);
            groupItem.Items.Add(m => m.Password);
            groupItem.Items.Add(m => m.RememberMe);
        }).GetHtml()*@
    <center>
        <div class="loginForm">
            @if (!Request.IsAuthenticated)
            {
                <img src="~/Content/Images/KSLogo_white.png" />

                Html.DevExpress().FormLayout(form =>
                {
                    form.Name = "frmLoginControls";
                    form.SettingsAdaptivity.AdaptivityMode = FormLayoutAdaptivityMode.SingleColumnWindowLimit;
                    form.SettingsAdaptivity.SwitchToSingleColumnAtWindowInnerWidth = 500;
                    form.NestedExtensionWidth = Unit.Percentage(100);
                    form.Styles.Style.CssClass = "loginForm";

                    form.Items.AddGroupItem(i =>
                    {
                        i.ColCount = 2;
                        i.ShowCaption = DefaultBoolean.False;
                        i.GroupBoxDecoration = GroupBoxDecoration.Box;
                        i.Items.Add(b =>
                        {
                            b.HorizontalAlign = FormLayoutHorizontalAlign.Center;
                            b.ShowCaption = DefaultBoolean.False;
                            //b.Width = Unit.Percentage(100);
                            b.SetNestedContent(() =>
                            {
                                Html.DevExpress().Button(
                                    register =>
                                    {
                                        register.Name = "btnRegister";
                                        register.Text = "Register";
                                        register.ClientSideEvents.Click = "function(s, e) { redirectToRegister(); }";
                                    }).Render();
                            });

                        });

                        i.Items.Add(b =>
                        {
                            b.HorizontalAlign = FormLayoutHorizontalAlign.Center;
                            b.ShowCaption = DefaultBoolean.False;
                            //b.Width = Unit.Percentage(100);
                            b.SetNestedContent(() =>
                            {
                                Html.DevExpress().Button(
                                    settings =>
                                    {
                                        settings.Name = "btnShowLoginModal";
                                        settings.Text = "Login";
                                        settings.ClientSideEvents.Click = "function(s, e) { modLogin.Show(); }";
                                    }
                                ).Render();
                            });
                        });
                    });
                }).GetHtml();


            }
        </div>
    </center>

    @Html.DevExpress().PopupControl(settings =>
    {
        settings.Name = "modLogin";
        settings.Width = 320;
        settings.AllowDragging = true;
        settings.CloseAction = CloseAction.CloseButton;
        settings.CloseOnEscape = true;
        settings.PopupAnimationType = AnimationType.None;
        settings.ShowHeader = false;
        settings.Modal = true;
        settings.AutoUpdatePosition = true;
        settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
        settings.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
        settings.SetContent(() =>
        {
            Html.RenderPartial("~/Views/Account/_loginPartial.cshtml");
        }); //End of setContent
        settings.ClientSideEvents.CloseUp = "function(s, e){ ASPxClientEdit.ClearEditorsInContainer(null, '', true); }";
    }).GetHtml()

    @Html.DevExpress().PopupControl(settings =>
{
    settings.Name = "modRegister";
    settings.Width = 400;
    settings.AllowDragging = true;
    settings.CloseAction = CloseAction.CloseButton;
    settings.CloseOnEscape = true;
    settings.PopupAnimationType = AnimationType.None;
    settings.ShowHeader = false;
    settings.Modal = true;
    settings.AutoUpdatePosition = true;
    settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
    settings.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
    settings.SetContent(() =>
    {
        //Html.RenderPartial("~/Views/Account/Register.cshtml");
        ViewContext.Writer.Write("Test");
        //Html.RenderAction("Register");

    });
    settings.ClientSideEvents.CloseUp = "function(s, e){ ASPxClientEdit.ClearEditorsInContainer(null, '', true); }";
}).GetHtml()


</div>

<script type="text/javascript">
    function redirectToRegister() {
        console.log('made it here!');
        var url = '@Url.Action("Register", "Account")';
        // do something with the url client side variable, for example redirect
        window.location.href = url;
    }
</script>