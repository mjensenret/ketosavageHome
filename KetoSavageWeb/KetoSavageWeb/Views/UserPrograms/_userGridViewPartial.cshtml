
@{ 
    var grid = Html.DevExpress().GridView(userList =>
    {
        userList.Name = "UserList";
        userList.CallbackRouteValues = new { Controller = "UserPrograms", Action = "UserProgramList" };
        userList.SettingsEditing.AddNewRowRouteValues = new { Controller = "UserPrograms", Action = "userProgramAdd" };
        userList.SettingsEditing.UpdateRowRouteValues = new { Controller = "UserPrograms", Action = "userProgramUpdate" };
        userList.SettingsEditing.DeleteRowRouteValues = new { Controller = "UserPrograms", Action = "userProgramDelete" };
        userList.Styles.AlternatingRow.Enabled = DefaultBoolean.True;
        userList.SettingsBehavior.AllowFixedGroups = false;
        userList.SettingsBehavior.AllowHeaderFilter = true;
        userList.SettingsBehavior.FilterRowMode = GridViewFilterRowMode.Auto;
        userList.Settings.ShowFilterRow = true;
        userList.Settings.ShowFilterRowMenu = true;
        userList.Settings.ShowFilterRowMenuLikeItem = true;
        userList.Settings.ShowGroupPanel = true;
        userList.SettingsBehavior.AllowFocusedRow = true;
        userList.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        userList.SettingsBehavior.ConfirmDelete = true;
        userList.SettingsPager.FirstPageButton.Visible = true;
        userList.SettingsPager.LastPageButton.Visible = true;
        userList.SettingsPager.PageSizeItemSettings.Visible = true;
        userList.SettingsPager.PageSizeItemSettings.Items = new string[] { "10", "20", "50" };


        userList.CommandColumn.Visible = true;
        userList.CommandColumn.ShowNewButtonInHeader = false;
        userList.CommandColumn.ShowNewButton = true;
        userList.CommandColumn.ShowEditButton = true;
        userList.CommandColumn.ShowClearFilterButton = true;
        userList.CommandColumn.ShowDeleteButton = true;
        userList.CommandButtonInitialize = (s, e) =>
        {
            var gv = s as MVCxGridView;
            var program = gv.GetRowValues(e.VisibleIndex, "ProgramName");
            var active = gv.GetRowValues(e.VisibleIndex, "IsActive");
            if ((program == null && (e.ButtonType == ColumnCommandButtonType.Edit || e.ButtonType == ColumnCommandButtonType.Delete)) || (program != null && (e.ButtonType == ColumnCommandButtonType.New)))
            {
                e.Enabled = false;
                e.Visible = false;
            }

            if (program !=null && false.Equals(active) && e.ButtonType == ColumnCommandButtonType.New)
            {
                e.Enabled = true;
                e.Visible = true;
            }
        };

        userList.KeyFieldName = "Id";

        userList.Columns.Add(c =>
        {
            c.FieldName = "Id";
            c.Visible = false;

        });
        userList.Columns.Add(c =>
        {
            c.FieldName = "UserId";
            c.Visible = false;
        });
        userList.Columns.Add(c =>
        {
            c.FieldName = "UserName";
            c.ReadOnly = true;
            c.VisibleIndex = 1;
        });
        userList.Columns.Add(c =>
        {
            c.FieldName = "FullName";
            c.Caption = "Name";
            c.ReadOnly = true;
            c.VisibleIndex = 2;
        });
        userList.Columns.Add(c =>
        {
            c.FieldName = "UserType";
            c.Caption = "User Type";
            c.ReadOnly = true;
            c.VisibleIndex = 3;
        });
        userList.Columns.Add(c =>
        {
            c.FieldName = "ProgramName";
            c.Caption = "Program";
            c.EditFormSettings.Visible = DefaultBoolean.False;
            c.VisibleIndex = 4;
        });
        userList.Columns.Add(g =>
        {
            g.Visible = false;
            g.FieldName = "MasterProgramId";
            g.Caption = "Program";
            g.EditFormSettings.Visible = DefaultBoolean.True;
            g.ColumnType = MVCxGridViewColumnType.ComboBox;
            g.VisibleIndex = 5;
            var combo = g.PropertiesEdit as ComboBoxProperties;
            combo.DataSource = ViewBag.ProgramList;

        });
        userList.Columns.Add(c =>
        {
            c.FieldName = "currentProgramStartDate";
            c.Caption = "Start Date";
            c.ColumnType = MVCxGridViewColumnType.DateEdit;
            c.VisibleIndex = 6;
        });
        userList.Columns.Add(c =>
        {
            c.FieldName = "currentProgramRenewalDate";
            c.Caption = "Renewal Date";
            c.ColumnType = MVCxGridViewColumnType.DateEdit;
            c.VisibleIndex = 7;
        });
        userList.Columns.Add(c =>
        {
            c.FieldName = "currentProgramEndDate";
            c.Caption = "End Date";
            c.ColumnType = MVCxGridViewColumnType.DateEdit;
            c.VisibleIndex = 8;
        });
        userList.Columns.Add(c =>
        {
            c.FieldName = "StartWeight";
            c.Visible = false;
            c.EditFormSettings.Visible = DefaultBoolean.True;
            c.EditFormSettings.VisibleIndex = 20;
        });
        userList.Columns.Add(c =>
        {
            c.FieldName = "GoalWeight";
            c.Visible = false;
            c.EditFormSettings.Visible = DefaultBoolean.True;
            c.EditFormSettings.VisibleIndex = 21;
        });
        userList.Columns.Add(c =>
        {
            c.FieldName = "LastModified";
            c.Caption = "Last Modified";
            c.ReadOnly = true;
            c.Visible = true;
            c.PropertiesEdit.DisplayFormatString = "MM/dd/yyyy";
            c.EditFormSettings.Visible = DefaultBoolean.False;
        });
        userList.Columns.Add(c =>
        {
            c.FieldName = "Notes";
            c.Visible = false;
            c.EditFormSettings.Visible = DefaultBoolean.True;
            c.VisibleIndex = 9;
        });
        userList.Columns.Add(c =>
        {
            c.FieldName = "CoachId";
            c.ColumnType = MVCxGridViewColumnType.ComboBox;
            c.Visible = false;
            c.Caption = "Coach";
            c.EditFormSettings.Visible = DefaultBoolean.True;
            c.VisibleIndex = 10;
            var combo = c.PropertiesEdit as ComboBoxProperties;
            combo.DataSource = ViewBag.CoachList;
        });
        userList.Columns.Add(c =>
        {
            c.FieldName = "IsActive";
            c.ColumnType = MVCxGridViewColumnType.CheckBox;
            c.Caption = "Active";
            c.EditFormSettings.Visible = DefaultBoolean.True;

        });
        userList.InitNewRow = (s, e) =>
        {
            MVCxGridView g = s as MVCxGridView;
            e.NewValues["UserName"] = g.GetRowValues(g.FocusedRowIndex, "UserName");
            e.NewValues["FullName"] = g.GetRowValues(g.FocusedRowIndex, "FullName");
            e.NewValues["UserType"] = g.GetRowValues(g.FocusedRowIndex, "UserType");
            e.NewValues["UserId"] = g.GetRowValues(g.FocusedRowIndex, "UserId");
            e.NewValues["IsActive"] = true;
        };

    });
}
@grid.Bind(Model).GetHtml()