
@{ 
    var grid = Html.DevExpress().GridView(userList =>
    {
        userList.Name = "UserList";
        userList.CallbackRouteValues = new { Controller = "UserPrograms", Action = "UserProgramList" };
        //userList.SettingsEditing.AddNewRowRouteValues = new { Controller = "UserPrograms", Action = "userProgramGridAdd" };
        userList.SettingsEditing.UpdateRowRouteValues = new { Controller = "UserPrograms", Action = "userProgramGridEdit" };
        userList.Styles.AlternatingRow.Enabled = DefaultBoolean.True;
        userList.SettingsBehavior.AllowFixedGroups = true;
        userList.Settings.ShowGroupPanel = true;
        userList.SettingsBehavior.AllowFocusedRow = true;
        userList.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        userList.SettingsBehavior.ConfirmDelete = true;
        userList.SettingsPager.FirstPageButton.Visible = true;
        userList.SettingsPager.LastPageButton.Visible = true;
        userList.SettingsPager.PageSizeItemSettings.Visible = true;
        userList.SettingsPager.PageSizeItemSettings.Items = new string[] { "10", "20", "50" };

        userList.CommandColumn.Visible = true;
        userList.CommandColumn.ShowNewButtonInHeader = false;
        userList.CommandColumn.ShowEditButton = true;

        userList.KeyFieldName = "UserId";

        userList.Columns.Add(c =>
        {
            c.FieldName = "Id";
            c.Visible = false;

        });
        userList.Columns.Add(c =>
        {
            c.FieldName = "UserId";
            c.Visible = false;
        });
        userList.Columns.Add(c =>
        {
            c.FieldName = "UserName";
            c.ReadOnly = true;
            c.VisibleIndex = 1;
        });
        userList.Columns.Add(c =>
        {
            c.FieldName = "FullName";
            c.Caption = "Name";
            c.ReadOnly = true;
            c.VisibleIndex = 2;
        });
        userList.Columns.Add(c =>
        {
            c.FieldName = "UserType";
            c.Caption = "User Type";
            c.ReadOnly = true;
            c.VisibleIndex = 3;
        });
        userList.Columns.Add(c =>
        {
            c.FieldName = "ProgramName";
            c.Caption = "Program";
            c.EditFormSettings.Visible = DefaultBoolean.False;
            c.VisibleIndex = 4;
        });
        userList.Columns.Add(g =>
        {
            g.Visible = false;
            g.FieldName = "ProgramId";
            g.Caption = "Program";
            g.EditFormSettings.Visible = DefaultBoolean.True;
            g.ColumnType = MVCxGridViewColumnType.ComboBox;
            g.VisibleIndex = 5;
            var combo = g.PropertiesEdit as ComboBoxProperties;
            combo.DataSource = ViewBag.ProgramList;

        });
        userList.Columns.Add(c =>
        {
            c.FieldName = "currentProgramStartDate";
            c.Caption = "Start Date";
            c.ColumnType = MVCxGridViewColumnType.DateEdit;
            c.VisibleIndex = 6;
        });
        userList.Columns.Add(c =>
        {
            c.FieldName = "currentProgramRenewalDate";
            c.Caption = "Renewal Date";
            c.ColumnType = MVCxGridViewColumnType.DateEdit;
            c.VisibleIndex = 7;
        });
        userList.Columns.Add(c =>
        {
            c.FieldName = "currentProgramEndDate";
            c.Caption = "End Date";
            c.ColumnType = MVCxGridViewColumnType.DateEdit;
            c.VisibleIndex = 8;
        });
        userList.Columns.Add(c =>
        {
            c.FieldName = "Notes";
            c.Visible = false;
            c.EditFormSettings.Visible = DefaultBoolean.True;
            c.VisibleIndex = 9;
        });
        userList.Columns.Add(c =>
        {
            c.FieldName = "CoachId";
            c.ColumnType = MVCxGridViewColumnType.ComboBox;
            c.Visible = false;
            c.Caption = "Coach";
            c.EditFormSettings.Visible = DefaultBoolean.True;
            c.VisibleIndex = 10;
            var combo = c.PropertiesEdit as ComboBoxProperties;
            combo.DataSource = ViewBag.CoachList;
        });
        userList.Columns.Add(c =>
        {
            c.FieldName = "ProgramUserId";
            c.Caption = "Macros";
            c.SetDataItemTemplateContent(container =>
            {
                Html.DevExpress().HyperLink(hlSettings =>
                {
                    //var visibleIndex = container.VisibleIndex;
                    //var keyValue = container.KeyValue;
                    ////var userName = DataBinder.Eval(container.DataItem, "UserName");

                    //hlSettings.Name = "hl" + keyValue.ToString();
                    //hlSettings.Properties.Text = "Edit Macros";
                    //hlSettings.NavigateUrl = Url.Action("UserProgramDetails", "UserPrograms", new { _userId = keyValue });
                    hlSettings.Name = string.Format("hl_{0}", (container as GridViewDataItemTemplateContainer).VisibleIndex);
                    hlSettings.NavigateUrl = "javascript:void(0)";
                    hlSettings.Properties.ClientSideEvents.Click = string.Format("function(s, e) {{ OnHyperLinkClick('{0}'); }}", (container as GridViewDataItemTemplateContainer).KeyValue.ToString());
                    hlSettings.Properties.Text = "Edit Macros";
                }).Render();
            });

        });
    });
}
@grid.Bind(Model).GetHtml()