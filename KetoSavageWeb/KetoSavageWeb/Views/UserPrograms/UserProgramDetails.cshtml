@model KetoSavageWeb.ViewModels.UserProgramViewModel
@{
    ViewBag.Title = "User Program Details";

}
<script language="javascript">

    function LoadMyGrid() {

    }

    function OnStartEdit(s, e) {

    }

    function OnEndEdit(s, e) {

    }

    function OnValidateEdit(s, e) {

    }

    function AddNewRow() {

    }

    function OnSelectionChanged(s, e) {
    }

    function GotFocus(s, e) {
        //currentControl = s;
        //setTimeout(FocusControl, 100);
    }

    function FocusControl() {

        //currentControl.SelectAll();
    }

    function SubmitGrid() {
        if (UpdateMacroGrid.batchEditApi.ValidateRows()) {
            UpdateMacroGrid.UpdateEdit();
        }

    }

    function myFunction() {
        UpdateMacroGrid.batchEditApi.MoveFocusForward();
    }
</script>


<div id="controlPanel">
    @Html.DevExpress().Panel(settings =>
    {
        settings.Name = "pnlButtons";
        settings.ControlStyle.CssClass = "pnlButtons";
        settings.SetContent(() =>
        {
            ViewContext.Writer.Write("<div class=\"buttons\">");
            Html.DevExpress().Button(um =>
            {
                um.Name = "btnShowMacros";
                um.Text = "Update Macros";
                um.ClientSideEvents.Click = "function(s, e) { openWindow('Macros'); }";
            }).Render();
            ViewContext.Writer.Write("</div>");
            //ViewContext.Writer.Write("<div class=\"buttons\">");

            //Html.DevExpress().Button(t =>
            //{
            //    t.Name = "btnTest";
            //    t.Text = "Test Button";
            //}).Render();
            //ViewContext.Writer.Write("</div>");
        });
    }).GetHtml()
</div>
<div id="weightGraph">
    @Html.DevExpress().Panel(settings =>
    {
        settings.Name = "pnlWeightGraph";
        settings.SetContent(() =>
        {
            var userId = Session["UserId"];
            Html.RenderAction("ClientWeightGraph", "ClientCharts", new { userId = userId });
        });

    }).GetHtml()
</div>
<div id="gaugeContainer">
    @Html.DevExpress().Panel(settings =>
        {
            settings.Name = "pnlCharts";
            settings.SetContent(() =>
            {
                Html.RenderAction("ClientPerformanceGauge", "ClientCharts", new { userId = Session["UserId"] });
                Html.RenderAction("ClientPastWeekMacroChart", "ClientCharts", new { userId = Session["UserId"] });
                Html.RenderAction("ClientCurrentWeekMacroGauge", "ClientCharts", new { userId = Session["UserId"] });
            });
        }).GetHtml()
</div>
<div id="gridContainer">
    @Html.DevExpress().Panel(settings =>
    {
        settings.Name = "pnlGrids";
        settings.SetContent(() =>
        {
            Html.RenderAction("ClientProgramGrid", "ClientCharts", new { userId = Session["UserId"] });
        });
    }).GetHtml()
</div>


            @Html.DevExpress().PopupControl(settings =>
       {
           settings.Name = "popupControl";
           //settings.Width = 400;
           settings.AllowDragging = true;
           settings.CloseAction = CloseAction.CloseButton;
           settings.CloseOnEscape = true;
           settings.PopupAnimationType = DevExpress.Web.AnimationType.Fade;
           settings.ShowHeader = false;
           settings.Modal = true;
           settings.AutoUpdatePosition = true;
           settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
           settings.PopupVerticalAlign = PopupVerticalAlign.TopSides;
           settings.ClientSideEvents.CloseUp = "function(s, e){ ASPxClientEdit.ClearEditorsInContainer(null, '', true); }";
       }).GetHtml()


    <script type="text/javascript">

        //debugger;
        function openWindow(action) {
            $.ajax({
                type: "POST",
                url: "@Url.Action("EntryPopup", "UserPrograms")",
                data: { buttonName: action },
                traditional: true,
                success: function (response) {
                    popupControl.SetContentHtml(response);
                    MVCxClientUtils.FinalizeCallback();
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    alert('oops, something bad happened');
                }
            });
            window['popupControl'].Show();
        }

    </script>
