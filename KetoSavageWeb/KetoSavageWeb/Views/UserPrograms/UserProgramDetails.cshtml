@model KetoSavageWeb.ViewModels.UserProgramViewModel
@{
    ViewBag.Title = "User Program Details";

}
<script type="text/javascript">

    function enterMacroPopup() {
        var mainPopup = $("#mainDxPopup").dxPopup("instance");
        mainPopup.option("contentTemplate", $("#dxMacroPopup"));
        mainPopup.option("title", "Enter Macros");
        mainPopup.show();
    }

    function GotFocus(s, e) {
        //currentControl = s;
        //setTimeout(FocusControl, 100);
    }

    function onGridLoad() {
        var form = $("#updateForm").dxForm("instance");
        var fat = form.getEditor("Fat").option("value");
        var protein = form.getEditor("Protein").option("value");
        var carbs = form.getEditor("Carbohydrates").option("value");
        var total = ((fat * 9) + (protein * 4) + (carbs * 4));
        $("#updateForm").dxForm("instance").getEditor("TotalCalories").option("value", total);

    }
    function FocusControl() {

        //currentControl.SelectAll();
    }

    function SubmitGrid() {
        if (UpdateMacroGrid.batchEditApi.ValidateRows()) {
            UpdateMacroGrid.UpdateEdit();
        }

    }

    function myFunction() {
        UpdateMacroGrid.batchEditApi.MoveFocusForward();
    }

    function openWindow() {
        window['macroPopup'].Show();
    }

    function updateMacroPieChart(s, e) {
        var form = $("#updateForm").dxForm("instance");
        var fat = form.getEditor("Fat").option("value");
        var protein = form.getEditor("Protein").option("value");
        var carbs = form.getEditor("Carbohydrates").option("value");
        //var test = form.updateData("TotalCalories", 5);


        $.ajax({
            type: "POST",
            url: '@Url.Action("onMacroChange", "UserPrograms")',
            data: { fat: fat, protein: protein, carbs: carbs},
            success: function(response) {
                $("#macro-chart").html(response);
                var total = ((fat * 9) + (protein * 4) + (carbs * 4));
                $("#updateForm").dxForm("instance").getEditor("TotalCalories").option("value", total);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                alert("For some reason, this did not work");
            }
        });
    }

</script>

<div id="client-name">
    Client: @ViewBag.ClientName
</div>

<div class="row">
    <div class="col-sm-12">
        @(Html.DevExtreme().Button()
                    .ID("btnUpdateMacros")
                    .Text("Update Macros")
                    .OnClick("enterMacroPopup")
        )
    </div>
</div>
<div class="row">
    <div class="col-sm-12">
        @Html.Action("ClientWeightGraph", "ClientCharts", new { userId = Session["UserId"] })
    </div>
</div>
<div class="row">
    <div class="col-sm-12 col-lg-3">
        @Html.Action("ClientPerformanceGauge", "ClientCharts", new { userId = Session["UserId"] })
    </div>
    <div class="col-sm-12 col-lg-3">
        @Html.Action("ClientPastWeekMacroChart", "ClientCharts", new { userId = Session["UserId"] })
    </div>
    <div class="col-sm-12 col-lg-3">
        @Html.Action("PvAMacroPieChart", "ClientCharts")
    </div>
    <div class="col-sm-12 col-lg-3">
        @Html.Action("PvACurrentMacroPieChart", "ClientCharts")
    </div>
</div>
<div class="row">
    <div class="col-sm-12">
        @Html.Action("ClientCurrentWeekMacroGauge", "ClientCharts", new { userId = Session["UserId"] })
    </div>
</div>
<div class="row">
    <div class="col-sm-12">
        @if (Request.Browser.IsMobileDevice)
        {
            if (Request.Browser.ScreenPixelsWidth > 780)
            {
                @Html.Action("ClientProgramGrid", "ClientCharts", new { userId = Session["UserId"] })
            }
            else
            {
                @Html.Action("ClientProgramGridMobile", "ClientCharts", new { userId = Session["UserId"] })
            }

        }
        else
        {
            @Html.Action("ClientProgramGrid", "ClientCharts", new { userId = Session["UserId"] })
        }
    </div>
</div>

@using (Html.DevExtreme().NamedTemplate("dxMacroPopup"))
{
    @(Html.Action("EnterMacroForm"))
}

