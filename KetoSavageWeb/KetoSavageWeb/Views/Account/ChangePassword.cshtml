@model KetoSavageWeb.Models.ChangePasswordModel
@{ Layout = "~/Views/Shared/_lightLayout.cshtml"; }

<div class="accountHeader">
    <h2>Change Password</h2>
    <p>Use the form below to change your password.</p>
    <p style="color:red">@ViewBag.ErrorMessage</p>
</div>

@Html.DevExpress().Button(
        settings =>
        {
            settings.Name = "btShowModal";
            settings.Text = "Show Modal Window";
            settings.ClientSideEvents.Click = "function(s, e) { modChangePassword.Show(); }";
        }
    ).GetHtml()

@Html.DevExpress().PopupControl(settings =>
{
    settings.Name = "modChangePassword";
    settings.Width = 320;
    settings.AllowDragging = true;
    settings.CloseAction = CloseAction.CloseButton;
    settings.CloseOnEscape = true;
    settings.PopupAnimationType = AnimationType.None;
    settings.HeaderText = "Change Password";
    settings.Modal = true;
    settings.AutoUpdatePosition = true;
    settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
    settings.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
    settings.SetContent(() =>
    {
        using (Html.BeginForm("ChangePassword", "Account", FormMethod.Post, new { id = "popupForm", @class = "edit_form" }))
        {
            ViewContext.Writer.Write(Html.AntiForgeryToken().ToHtmlString());

            Html.Hidden("UserId");

            @Html.DevExpress().FormLayout(s =>
            {
                s.Name = "ModalModeFormLayout";
                s.RequiredMarkDisplayMode = RequiredMarkMode.None;
                s.Width = Unit.Percentage(100);
                s.Height = Unit.Percentage(100);

                s.NestedExtensionWidth = Unit.Percentage(100);
                s.Items.Add(m => m.OldPassword, item =>
                {
                    item.HelpText = "";
                    item.Caption = "Old Password";
                    item.NestedExtensionType = FormLayoutNestedExtensionItemType.TextBox;
                    var tbSettings = (TextBoxSettings)item.NestedExtensionSettings;
                    tbSettings.Properties.Password = true;
                });
                s.Items.Add(m => m.NewPassword, item =>
                {
                    item.HelpText = "";
                    item.Caption = "New Password";
                    item.NestedExtensionType = FormLayoutNestedExtensionItemType.TextBox;
                    var tbSettings = (TextBoxSettings)item.NestedExtensionSettings;
                    tbSettings.Properties.Password = true;
                });
                s.Items.Add(m => m.ConfirmPassword, item =>
                {
                    item.HelpText = "";
                    item.Caption = "Confirm Password";
                    item.NestedExtensionType = FormLayoutNestedExtensionItemType.TextBox;
                    var tbSettings = (TextBoxSettings)item.NestedExtensionSettings;
                    tbSettings.Properties.Password = true;
                });
                s.Items.Add(i =>
                {
                    i.ShowCaption = DefaultBoolean.False;
                    i.SetNestedContent(() =>
                    {
                        Html.DevExpress().Button(
                            buttonSettings =>
                            {
                                buttonSettings.Name = "btnUpdate";
                                buttonSettings.ControlStyle.CssClass = "button";
                                buttonSettings.Width = 80;
                                buttonSettings.Text = "OK";
                                buttonSettings.UseSubmitBehavior = true;
                            }
                        ).Render();
                        Html.DevExpress().Button(
                            buttonSettings =>
                            {
                                buttonSettings.Name = "btnCancel";
                                buttonSettings.ControlStyle.CssClass = "button";
                                buttonSettings.Width = 80;
                                buttonSettings.Text = "Cancel";
                                buttonSettings.ClientSideEvents.Click = "function(s, e){ modChangePassword.Hide(); }";
                            }
                        ).Render();
                    });
                });
            }).Render();
        }
    });

    settings.ClientSideEvents.CloseUp = "function(s, e){ ASPxClientEdit.ClearEditorsInContainer(null, '', true); }";
}).GetHtml()

@*@using (Html.BeginForm()) {
        @Html.AntiForgeryToken()
        @Html.DevExpress().TextBoxFor(m => m.OldPassword, tb => {
            tb.Properties.Caption = "Old Password";
            tb.Properties.Password = true;
            tb.Properties.CaptionSettings.Position = EditorCaptionPosition.Top;
            tb.ShowModelErrors = true;
            tb.Properties.ValidationSettings.Display = Display.Dynamic;
            tb.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.Text;
            tb.Properties.ValidationSettings.ErrorTextPosition = ErrorTextPosition.Bottom;
        }).GetHtml()

        @Html.DevExpress().TextBoxFor(m => m.NewPassword, tb => {
            tb.Properties.Caption = "New Password";
            tb.Properties.Password = true;
            tb.Properties.CaptionSettings.Position = EditorCaptionPosition.Top;
            tb.ShowModelErrors = true;
            tb.Properties.ValidationSettings.Display = Display.Dynamic;
            tb.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.Text;
            tb.Properties.ValidationSettings.ErrorTextPosition = ErrorTextPosition.Bottom;
        }).GetHtml()

        @Html.DevExpress().TextBoxFor(m => m.ConfirmPassword, tb => {
            tb.Properties.Caption = "Confirm Password";
            tb.Properties.Password = true;
            tb.Properties.CaptionSettings.Position = EditorCaptionPosition.Top;
            tb.ShowModelErrors = true;
            tb.Properties.ValidationSettings.Display = Display.Dynamic;
            tb.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.Text;
            tb.Properties.ValidationSettings.ErrorTextPosition = ErrorTextPosition.Bottom;
        }).GetHtml()
        <br />
        @Html.DevExpress().Button(b => {
            b.Name = "Button";
            b.Text = "Change Password";
            b.UseSubmitBehavior = true;
        }).GetHtml()


    }*@