@{
    var grid = Html.DevExpress().GridView(g =>
    {
        g.Name = "pastPerformanceGrid";
        g.CallbackRouteValues = new { Controller = "UserProgress", Action = "PastPerformanceGrid" };
        g.SettingsPager.Mode = GridViewPagerMode.ShowPager;
        g.SettingsPager.PageSize = 14;
        g.SettingsPager.AlwaysShowPager = true;
        g.SettingsPager.FirstPageButton.Visible = true;
        g.SettingsPager.LastPageButton.Visible = true;
        g.SettingsBehavior.AllowFocusedRow = true;
        g.SettingsBehavior.AllowSelectByRowClick = false;

        g.SettingsAdaptivity.AdaptiveDetailColumnCount = 2;
        g.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCellsWindowLimit;
        g.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 800;
        g.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = true;
        g.EditFormLayoutProperties.SettingsAdaptivity.AdaptivityMode = FormLayoutAdaptivityMode.SingleColumnWindowLimit;
        g.EditFormLayoutProperties.SettingsAdaptivity.SwitchToSingleColumnAtWindowInnerWidth = 600;


        g.KeyFieldName = "Id";

        g.Columns.Add(c =>
        {
            c.FieldName = "Date";
            c.PropertiesEdit.DisplayFormatString = "d";
            c.AdaptivePriority = 1;
        });
        g.Columns.Add(c =>
        {
            c.FieldName = "WeekDay";
            c.AdaptivePriority = 10;
            c.Visible = false;
        });
        g.Columns.AddBand(b =>
        {
            b.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
            b.Caption = "Weight";
            b.HeaderStyle.Font.Bold = true;
            b.Columns.Add(c =>
            {
                c.Caption = "Planned";
                c.FieldName = "PlannedWeight";
                //c.AdaptivePriority = 1;
            });
            b.Columns.Add(c =>
            {
                c.Caption = "Actual";
                c.FieldName = "ActualWeight";
                c.AdaptivePriority = 1;
            });
            b.Columns.Add(c =>
            {
                c.FieldName = "weightDiff";
                c.Caption = "Variance";
                c.UnboundType = DevExpress.Data.UnboundColumnType.Decimal;
                c.UnboundExpression = "ROUND([ActualWeight] - [PlannedWeight],2)";

            });
        });
        g.Columns.AddBand(b =>
        {
            b.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
            b.Caption = "Fat";
            b.Columns.Add(c =>
            {
                c.Caption = "Planned";
                c.FieldName = "PlannedFat";
            });
            b.Columns.Add(c =>
            {
                c.Caption = "Actual";
                c.FieldName = "ActualFat";
                c.AdaptivePriority = 1;
            });
            b.Columns.Add(c =>
            {
                c.FieldName = "fatDiff";
                c.Caption = "Variance";
                c.UnboundType = DevExpress.Data.UnboundColumnType.Decimal;
                c.UnboundExpression = "ROUND([ActualFat] - [PlannedFat],2)";

            });
        });
        g.Columns.AddBand(b =>
        {
            b.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
            b.Caption = "Protein";
            b.Columns.Add(c =>
            {
                c.Caption = "Planned";
                c.FieldName = "PlannedProtein";
            });
            b.Columns.Add(c =>
            {
                c.Caption = "Actual";
                c.FieldName = "ActualProtein";
                c.AdaptivePriority = 1;
            });
            b.Columns.Add(c =>
            {
                c.FieldName = "protDiff";
                c.Caption = "Variance";
                c.UnboundType = DevExpress.Data.UnboundColumnType.Decimal;
                c.UnboundExpression = "ROUND([ActualProtein] - [PlannedProtein],2)";

            });
        });
        g.Columns.AddBand(b =>
        {
            b.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
            b.Caption = "Carbohydrates";
            b.Columns.Add(c =>
            {
                c.Caption = "Planned";
                c.FieldName = "PlannedCarbohydrates";
            });
            b.Columns.Add(c =>
            {
                c.Caption = "Actual";
                c.FieldName = "ActualCarbohydrates";
                c.AdaptivePriority = 1;
            });
            b.Columns.Add(c =>
            {
                c.FieldName = "carbDiff";
                c.Caption = "Variance";
                c.UnboundType = DevExpress.Data.UnboundColumnType.Decimal;
                c.UnboundExpression = "ROUND([ActualCarbohydrates] - [PlannedCarbohydrates],2)";

            });
        });

        g.CellEditorInitialize = (s, e) =>
         {
             ((ASPxEdit)e.Editor).ValidationSettings.Display = Display.Dynamic;
         };
    });
}
@grid.Bind(Model).GetHtml()

