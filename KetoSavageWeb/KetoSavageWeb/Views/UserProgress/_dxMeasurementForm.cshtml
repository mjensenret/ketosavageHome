@using KetoSavageWeb.Models
@using KetoSavageWeb.ViewModels
@using ButtonType = DevExtreme.AspNet.Mvc.ButtonType
@model KetoSavageWeb.ViewModels.MeasurementViewModel

<div id="form-container">


    @{ Html.BeginForm("DxUpdateMeasurements", "UserProgress", FormMethod.Post, new { id = "editMeasurements" });}
    @*@(Html.DevExtreme().DateBox()
              .ID("dteMeasurementDate")
              .Value(Model.measurementDate)
              )
        @(Html.DevExtreme().TextArea()
              .ID("txtMeasurementNotes")
              .Value(Model.measurementNotes)
              )*@
    
    @Html.HiddenFor(m => m.Id)
    @Html.HiddenFor(m => m.UserProgramId)
    <div id="measurement-form">
        @(Html.DevExtreme().Form<MeasurementViewModel>()
                      .ID("measurementForm")
                      .ValidationGroup("measurements")
                      .LabelLocation(FormLabelLocation.Top)
                      .Items(items =>
                      {
                          items.AddGroup()
                              .Items(groupItems =>
                              {
                                  groupItems.AddSimpleFor(m => m.MeasurementDate)
                                      .Editor(e => e
                                          .DateBox()
                                          .OnValueChanged("refreshForm")
                                          .ID("measurementDate")
                                          .Width("100%")
                                      );
                                  groupItems.AddSimpleFor(m => m.MeasurementNotes);
                                  groupItems.AddSimpleFor(m => m.MeasurementDetails)
                                      .Template(@<text>
                                        @(Html.DevExtreme().DataGrid()
                                                      .ID("measurementGrid")
                                                      .ShowBorders(true)
                                                      .DataSource(Model.MeasurementDetails)
                                                      //.DataSource(ds => ds
                                                      //    .Mvc()
                                                      //    .Controller("UserProgress")
                                                      //    .LoadAction("GetOrderDetails")
                                                      //    .LoadParams(new { date = new JS("getDateValue") }))
                                                      .Editing(e =>
                                                      {
                                                          e.Mode(GridEditMode.Row);
                                                          e.AllowAdding(true);
                                                          e.AllowUpdating(true);
                                                          e.AllowDeleting(true);
                                                      })
                                                      .Columns(c =>
                                                      {
                                                          c.Add().DataField("Id").Visible(false);
                                                          c.Add().DataField("MeasurementId").Visible(false);
                                                          c.Add().DataField("MeasurementType")
                                                              .Lookup(l => l
                                                                  .DataSource(EnumHelper.GetSelectList(typeof(MeasurementType))
                                                                      .Select(i => new { Value = i.Text, Text = i.Text }))
                                                                  .DisplayExpr("Text")
                                                                  .ValueExpr("Value"));
                                                          c.Add().DataField("MeasurementValue");
                                                      }))
                                    </text>);
                                        groupItems.AddSimple()
                                            .Template(@<text>
                                                @(Html.DevExtreme().Button()
                                                              .ID("btnAddMeasurements")
                                                              .Text("Save")
                                                              .Type(ButtonType.Success)
                                                              .UseSubmitBehavior(false)
                                                              .OnClick("clickHandler")
                                                              .ValidationGroup("measurements"))
                                            </text>);
                                            });
                                    })
                                    .FormData(Model))
    </div>
    @{ Html.EndForm();}

</div>