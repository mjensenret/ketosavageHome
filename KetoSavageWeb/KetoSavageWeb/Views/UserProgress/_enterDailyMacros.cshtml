@model KetoSavageWeb.ViewModels.EnterMacroViewModel

@{ Html.BeginForm("UpdateActualMacros", "UserProgress", FormMethod.Post);}
@Html.DevExpress().FormLayout(settings =>
{
    settings.Name = "dailyMacros";


    settings.SettingsItems.ShowCaption = DefaultBoolean.True;
    settings.SettingsItemCaptions.Location = LayoutItemCaptionLocation.Top;

    settings.SettingsItemHelpTexts.Position = HelpTextPosition.Bottom;

    settings.Items.Add(m => m.macroUserId, u =>
    {
        u.ClientVisible = false;
        u.NestedExtension().TextBox(un =>
        {
            un.ClientVisible = false;
            un.ReadOnly = true;
        });
    });
    settings.Items.Add(m => m.macroDate, f =>
    {
        f.Caption = "Date";
        f.NestedExtension().DateEdit(d =>
        {
            d.Properties.EditFormatString = "MM/dd/yyyy";
            d.Properties.ClientSideEvents.DateChanged = "OnDateChanged";
        });
    });
    settings.Items.Add(m => m.actualFat, a =>
    {
        a.Caption = "Fat";
        a.NestedExtension().TextBox(f =>
        {

        });
    });
    settings.Items.Add(m => m.actualProtein, p =>
    {
        p.Caption = "Protein";
        p.NestedExtension().TextBox(t =>
        {

        });
    });
    settings.Items.Add(m => m.actualCarb, c =>
    {
        c.Caption = "Carbohydrates";
        c.NestedExtension().TextBox(ac =>
        {

        });
    });
    settings.Items.Add(m => m.hungerLevel, l =>
    {
        l.Caption = "Hunger Level";
        l.NestedExtension().ComboBox(s =>
        {
            s.Properties.ValueType = typeof(string);
            var list = Model.hungerList();
            foreach(var j in list)
            {
                s.Properties.Items.Add(j.Text, j.Value);
            }

        });
    });
    settings.Items.Add(m => m.Notes, n =>
    {
        n.Caption = "Notes";
        n.Width = Unit.Percentage(100);
        n.NestedExtension().Memo(memo =>
        {
            memo.Width = Unit.Percentage(100);
            memo.Properties.Rows = 8;
        });
    });
    settings.Items.Add(s =>
    {
        s.ShowCaption = DefaultBoolean.False;
        s.SetNestedContent(() =>
        {
            Html.DevExpress().Button(b =>
            {
                b.Name = "btnMacroSubmit";
                b.ControlStyle.CssClass = "button";
                b.Text = "Save";
                b.UseSubmitBehavior = true;
            }).Render();
        });
    });

}).GetHtml()
@{ Html.EndForm();}


